{"version":3,"sources":["../domains/eventEditor/src/ui/datetimes/DateRegistrationsLink.tsx","../domains/eventEditor/src/ui/datetimes/datesList/cardView/DateCapacity.tsx","../domains/eventEditor/src/ui/datetimes/datesList/editable/EditableDesc.tsx","../domains/eventEditor/src/ui/datetimes/datesList/editable/EditableName.tsx","../domains/eventEditor/src/ui/datetimes/hooks/useDatesActionMenuItems.ts","../domains/eventEditor/src/ui/datetimes/datesList/actionsMenu/DateActionsMenu.tsx","../domains/eventEditor/src/ui/datetimes/datesList/tableView/Checkbox.tsx","../domains/eventEditor/src/ui/datetimes/datesList/tableView/useHeaderRowGenerator.tsx","../domains/eventEditor/src/ui/datetimes/datesList/tableView/useBodyRowGenerator.tsx","../domains/eventEditor/src/ui/datetimes/datesList/bulkEdit/actions/Select.tsx","../domains/eventEditor/src/ui/datetimes/datesList/bulkEdit/details/formValidation.ts","../domains/eventEditor/src/ui/datetimes/datesList/bulkEdit/details/useBulkEditFormConfig.ts","../domains/eventEditor/src/ui/datetimes/datesList/bulkEdit/details/Warning.tsx","../domains/eventEditor/src/ui/datetimes/datesList/bulkEdit/details/Submit.tsx","../domains/eventEditor/src/ui/datetimes/datesList/bulkEdit/details/FormWrapper.tsx","../domains/eventEditor/src/ui/datetimes/datesList/bulkEdit/details/useSubmitForm.ts","../domains/eventEditor/src/ui/datetimes/datesList/bulkEdit/details/EditDetails.tsx","../domains/eventEditor/src/ui/datetimes/datesList/bulkEdit/actions/Actions.tsx","../domains/eventEditor/src/ui/datetimes/datesList/tableView/TableView.tsx"],"names":["DateRegistrationsLink","datetime","admin","useConfig","siteUrl","adminUrl","getAdminUrl","adminSiteUrl","page","ADMIN_ROUTES","REGISTRATIONS","eventId","useEventId","regListUrl","addQueryArgs","event_id","datetime_id","dbId","return","tooltip","__","tooltipProps","useMemoStringify","placement","href","React","memo","getPropsAreEqual","DateCapacity","entity","updateEntity","useDatetimeMutator","id","updateRelatedTickets","useUpdateRelatedTickets","ticketQuantityForCapacity","useTicketQuantityForCapacity","onChange","useCallback","cap","capacity","parseInfinity","inputGenerator","onChangeValue","value","EditableDesc","className","onChangeDesc","description","dateDesc","EditableName","view","dateName","name","onChangeName","fitText","tag","useDatesActionMenuItems","useEntityActionsMenuItems","DateActionsMenu","props","menuItems","Checkbox","visibleDatetimeIds","useEdtrState","visibleEntityIds","useHeaderRowGenerator","filterState","displayStartOrEndDate","cells","key","type","filter","filterCellByStartOrEndDate","primary","addZebraStripes","addZebraStripesOnMobile","useBodyRowGenerator","sortingEnabled","bgClassName","getDatetimeBackgroundColorClassName","shortenGuid","statusClassName","datetimeStatus","cellsData","format","Date","startDate","ENTITY_LIST_DATE_TIME_FORMAT","endDate","sold","filterCells","pipe","Select","setValue","options","label","validate","values","a","yupToFinalFormErrors","validationSchema","yup","min","unitOptions","intervalsToOptions","pick","DATE_INTERVALS","useBulkEditFormConfig","config","onSubmit","onSubmitFrom","form","restParams","adjacentFormItemProps","useMemo","layout","debugFields","sections","icon","ProfileOutlined","title","fields","fieldType","CalendarOutlined","formControlProps","subFields","ControlOutlined","parseAsInfinity","Warning","subscription","submitting","hasValidationErrors","hasSubmitErrors","pristine","Submit","useState","formState","setFormState","isSubmitDisabled","useEffect","subscribe","state","useConfirmationDialog","message","onConfirm","submit","confirmationDialog","onOpen","rightAligned","buttonText","buttonType","ButtonType","PRIMARY","isDisabled","onClick","reset","FormWrapper","children","useSubmitForm","onClose","useBulkEdit","getSelected","unSelectAll","allDates","useDatetimes","updateEntities","useBulkEditDatetimes","shiftDates","uniqueInputs","unit","selectedDates","entitiesWithGuIdInArray","shiftTheDate","shiftDate","map","toISOString","sharedInput","EditDetails","formConfig","isOpen","closeOnOverlayClick","formWrapper","Actions","action","setAction","useDisclosure","isApplyDisabled","length","display","alignItems","maxWidth","withBulkEdit","useDatesListContext","filteredEntities","sortDates","useReorderDatetimes","sortResponder","bodyRowGenerator","headerRowGenerator","entities","tableId","tableCaption","onSort"],"mappings":"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","file":"static/js/dates-table-view.e1e24fde.chunk.js","sourcesContent":["import React from 'react';\nimport { addQueryArgs } from '@wordpress/url';\nimport { __ } from '@wordpress/i18n';\n\nimport { ADMIN_ROUTES } from '@eventespresso/constants';\nimport type { Datetime } from '@eventespresso/edtr-services';\nimport { getAdminUrl } from '@eventespresso/edtr-services';\nimport { getPropsAreEqual } from '@eventespresso/services';\nimport { useMemoStringify } from '@eventespresso/hooks';\nimport { RegistrationsLink } from '@eventespresso/components';\nimport { useConfig } from '@eventespresso/services';\nimport { useEventId } from '@eventespresso/edtr-services';\nimport type { TooltipProps } from '@eventespresso/adapters';\n\ninterface Props {\n\tdatetime: Datetime;\n}\n\nconst DateRegistrationsLink: React.FC<Props> = ({ datetime }) => {\n\tconst {\n\t\tsiteUrl: { admin },\n\t} = useConfig();\n\tconst adminUrl = getAdminUrl({ adminSiteUrl: admin, page: ADMIN_ROUTES.REGISTRATIONS });\n\tconst eventId = useEventId();\n\tconst regListUrl = addQueryArgs(adminUrl, {\n\t\tevent_id: eventId,\n\t\tdatetime_id: datetime.dbId,\n\t\treturn: 'edit',\n\t});\n\tconst tooltip = __('view registrations for this date.');\n\tconst tooltipProps = useMemoStringify<TooltipProps>({ placement: 'top' });\n\n\treturn <RegistrationsLink href={regListUrl} tooltip={tooltip} tooltipProps={tooltipProps} />;\n};\n\nexport default React.memo(DateRegistrationsLink, getPropsAreEqual(['datetime', 'cacheId']));\n","import React, { useCallback } from 'react';\n\nimport { parseInfinity } from '@eventespresso/services';\nimport { InlineEditInfinity, TextProps } from '@eventespresso/components';\nimport {\n\tuseDatetimeMutator,\n\tuseUpdateRelatedTickets,\n\tuseTicketQuantityForCapacity,\n} from '@eventespresso/edtr-services';\nimport { getPropsAreEqual } from '@eventespresso/services';\nimport type { DateItemProps } from '../types';\n\nconst DateCapacity: React.FC<DateItemProps> = ({ entity: datetime }) => {\n\tconst { updateEntity } = useDatetimeMutator(datetime.id);\n\n\tconst updateRelatedTickets = useUpdateRelatedTickets(datetime.id);\n\tconst ticketQuantityForCapacity = useTicketQuantityForCapacity();\n\n\tconst onChange: TextProps['onChange'] = useCallback(\n\t\t(cap) => {\n\t\t\tconst capacity = parseInfinity(cap);\n\t\t\tif (capacity !== datetime.capacity) {\n\t\t\t\tupdateEntity({ capacity });\n\n\t\t\t\tconst inputGenerator = ticketQuantityForCapacity(capacity);\n\t\t\t\tupdateRelatedTickets(inputGenerator);\n\t\t\t}\n\t\t},\n\t\t[datetime.capacity, updateEntity, ticketQuantityForCapacity, updateRelatedTickets]\n\t);\n\n\treturn <InlineEditInfinity onChangeValue={onChange} value={`${datetime.capacity}`} />;\n};\n\nexport default React.memo(DateCapacity, getPropsAreEqual(['entity']));\n","import React, { useCallback } from 'react';\nimport { __ } from '@wordpress/i18n';\n\nimport type { DateItemProps } from '../types';\nimport { useDatetimeMutator } from '@eventespresso/edtr-services';\nimport { InlineEditTextArea } from '@eventespresso/components';\nimport { getPropsAreEqual } from '@eventespresso/services';\n\ninterface EditableDescProps extends DateItemProps {\n\tclassName?: string;\n}\n\nconst EditableDesc: React.FC<EditableDescProps> = ({ entity: datetime, className }) => {\n\tconst { updateEntity } = useDatetimeMutator(datetime.id);\n\n\tconst onChangeDesc = useCallback(\n\t\t(description: string): void => {\n\t\t\tif (description !== datetime.description) {\n\t\t\t\tupdateEntity({ description });\n\t\t\t}\n\t\t},\n\t\t[datetime.description, updateEntity]\n\t);\n\n\tconst dateDesc = datetime.description ? datetime.description : __('Edit description...');\n\n\treturn <InlineEditTextArea className={className} onChangeValue={onChangeDesc} value={dateDesc} />;\n};\n\nexport default React.memo(EditableDesc, getPropsAreEqual(['entity', 'description']));\n","import React, { useCallback } from 'react';\nimport { __ } from '@wordpress/i18n';\n\nimport type { DateItemProps } from '../types';\nimport { useDatetimeMutator } from '@eventespresso/edtr-services';\nimport { InlineEditText } from '@eventespresso/components';\nimport { getPropsAreEqual } from '@eventespresso/services';\n\ninterface EditableNameProps extends DateItemProps {\n\tclassName?: string;\n\tview?: 'card' | 'table';\n}\n\nconst EditableName: React.FC<EditableNameProps> = ({ className, entity: datetime, view = 'card' }) => {\n\tconst { updateEntity } = useDatetimeMutator(datetime.id);\n\n\tconst dateName = datetime.name ? datetime.name : __('Edit title...');\n\n\tconst onChangeName = useCallback(\n\t\t(name: string): void => {\n\t\t\tif (name !== datetime.name) {\n\t\t\t\tupdateEntity({ name });\n\t\t\t}\n\t\t},\n\t\t[datetime.name, updateEntity]\n\t);\n\n\treturn (\n\t\t<InlineEditText\n\t\t\tfitText={view === 'card'}\n\t\t\ttag={view === 'table' ? 'p' : 'h4'}\n\t\t\tclassName={className}\n\t\t\tonChangeValue={onChangeName}\n\t\t\tvalue={dateName}\n\t\t/>\n\t);\n};\n\nexport default React.memo(EditableName, getPropsAreEqual(['entity', 'name']));\n","import React from 'react';\n\nimport type { Datetime } from '@eventespresso/edtr-services';\nimport { useEntityActionsMenuItems } from '@edtrHooks/index';\n\nconst useDatesActionMenuItems = (datetime: Datetime): Array<React.ReactNode> => {\n\treturn useEntityActionsMenuItems('datetime', datetime);\n};\n\nexport default useDatesActionMenuItems;\n","import React from 'react';\n\nimport type { ActionsMenuComponentProps } from '@eventespresso/registry';\nimport { EntityActionsMenu } from '@eventespresso/components';\nimport useDatesActionMenuItems from '../../hooks/useDatesActionMenuItems';\nimport { Datetime } from '@eventespresso/edtr-services';\nimport { getPropsAreEqual } from '@eventespresso/services';\n\nconst DateActionsMenu: React.FC<ActionsMenuComponentProps<Datetime>> = ({ entity, ...props }) => {\n\tconst menuItems = useDatesActionMenuItems(entity);\n\n\treturn <EntityActionsMenu {...props} menuItems={menuItems} />;\n};\n\nexport default React.memo(DateActionsMenu, getPropsAreEqual(['entity', 'cacheId']));\n","import React from 'react';\n\nimport { ActionCheckbox, ActionCheckboxProps } from '@eventespresso/components';\n\nimport { useEdtrState } from '@edtrHooks/edtrState';\n\nconst Checkbox: React.FC<ActionCheckboxProps> = (props) => {\n\tconst { visibleDatetimeIds } = useEdtrState();\n\n\treturn <ActionCheckbox {...props} visibleEntityIds={visibleDatetimeIds} />;\n};\n\nexport default Checkbox;\n","import React, { useCallback } from 'react';\nimport { __ } from '@wordpress/i18n';\n\nimport { Cell } from '@eventespresso/components';\nimport { filterCellByStartOrEndDate } from '@eventespresso/edtr-services';\nimport { HeaderRowGeneratorFn } from '@eventespresso/components';\nimport { DatetimesFilterStateManager } from '@edtrServices/filterState';\nimport Checkbox from './Checkbox';\n\ntype DatesTableHeaderRowGen = HeaderRowGeneratorFn<DatetimesFilterStateManager>;\n\nconst useHeaderRowGenerator = (): DatesTableHeaderRowGen => {\n\treturn useCallback<DatesTableHeaderRowGen>((filterState) => {\n\t\tconst { displayStartOrEndDate } = filterState;\n\n\t\tconst cellsData: Array<Cell> = [\n\t\t\t{\n\t\t\t\tkey: 'stripe',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-entity-list-status-stripe ee-rspnsv-table-column-nano',\n\t\t\t\tvalue: '',\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'checkbox',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-date-list-col-checkbox ee-rspnsv-table-column-micro',\n\t\t\t\tvalue: <Checkbox />,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'id',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-date-list-col-id ee-number-column ee-rspnsv-table-column-nano',\n\t\t\t\tvalue: __('ID'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'name',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-date-list-col-name ee-rspnsv-table-column-huge',\n\t\t\t\tvalue: __('Name'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'start',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-date-list-col-name-start ee-rspnsv-table-column-default',\n\t\t\t\tvalue: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-long-label'}>{__('Start Date')}</span>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-short-label'}>{__('Start')}</span>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'end',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-date-list-col-end ee-rspnsv-table-column-default',\n\t\t\t\tvalue: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-long-label'}>{__('End Date')}</span>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-short-label'}>{__('End')}</span>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'capacity',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName:\n\t\t\t\t\t'ee-date-list-col-hdr ee-date-list-col-capacity ee-rspnsv-table-column-tiny ee-number-column',\n\t\t\t\tvalue: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-long-label'}>{__('Capacity')}</span>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-short-label'}>{__('Cap')}</span>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'sold',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-date-list-col-sold ee-rspnsv-table-column-tiny ee-number-column',\n\t\t\t\tvalue: __('Sold'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'registrations',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName:\n\t\t\t\t\t'ee-date-list-col-hdr ee-date-list-col-registrations ee-rspnsv-table-column-smaller ee-centered-column',\n\t\t\t\tvalue: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-long-label'}>{__('Reg list')}</span>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-short-label'}>{__('Regs')}</span>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'actions',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-actions-column ee-rspnsv-table-column-big ee-centered-column',\n\t\t\t\tvalue: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-long-label'}>{__('Actions')}</span>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-short-label'}>{__('Actions')}</span>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t];\n\n\t\tconst cells = cellsData.filter(filterCellByStartOrEndDate(displayStartOrEndDate));\n\n\t\treturn {\n\t\t\tcells,\n\t\t\tclassName: 'ee-editor-date-list-items-header-row',\n\t\t\tkey: 'dates-list-header',\n\t\t\tprimary: true,\n\t\t\ttype: 'row',\n\t\t};\n\t}, []);\n};\n\nexport default useHeaderRowGenerator;\n","import React, { useCallback } from 'react';\nimport { format } from 'date-fns';\nimport { filter, pipe } from 'ramda';\n\nimport { addZebraStripesOnMobile } from '@eventespresso/components';\nimport DateRegistrationsLink from '@edtrUI/datetimes/DateRegistrationsLink';\nimport DateActionsMenu from '@edtrUI/datetimes/datesList/actionsMenu/DateActionsMenu';\nimport type { Datetime } from '@eventespresso/edtr-services';\nimport { filterCellByStartOrEndDate } from '@eventespresso/edtr-services';\nimport { ENTITY_LIST_DATE_TIME_FORMAT } from '@eventespresso/constants';\nimport { getDatetimeBackgroundColorClassName, datetimeStatus } from '@eventespresso/helpers'; // '@sharedEntities/datetimes/helpers';\nimport { shortenGuid } from '@eventespresso/services';\nimport DateCapacity from '../cardView/DateCapacity';\nimport type { BodyRowGeneratorFn } from '@eventespresso/components';\nimport type { DatetimesFilterStateManager } from '@edtrServices/filterState';\nimport { EditableName } from '../editable';\nimport Checkbox from './Checkbox';\n\nimport '../../../../../../../packages/styles/src/root/entity-status.css';\n\ntype DatesTableBodyRowGen = BodyRowGeneratorFn<Datetime, DatetimesFilterStateManager>;\n\nconst exclude = ['row', 'stripe', 'name', 'actions'];\nconst addZebraStripes = addZebraStripesOnMobile(exclude);\n\nconst useBodyRowGenerator = (): DatesTableBodyRowGen => {\n\treturn useCallback<DatesTableBodyRowGen>(({ entity: datetime, filterState }) => {\n\t\tconst { displayStartOrEndDate, sortingEnabled } = filterState;\n\t\tconst bgClassName = getDatetimeBackgroundColorClassName(datetime);\n\t\tconst id = datetime.dbId || shortenGuid(datetime.id);\n\t\tconst statusClassName = datetimeStatus(datetime);\n\n\t\tconst capacity = {\n\t\t\tkey: 'capacity',\n\t\t\ttype: 'cell',\n\t\t\tclassName: 'ee-date-list-cell ee-date-list-col-capacity ee-rspnsv-table-column-tiny ee-number-column',\n\t\t\tvalue: sortingEnabled ? datetime.capacity : <DateCapacity entity={datetime} />,\n\t\t};\n\n\t\tconst name = {\n\t\t\tkey: 'name',\n\t\t\ttype: 'cell',\n\t\t\tclassName:\n\t\t\t\t'ee-date-list-cell ee-date-list-col-name ee-col-name ee-rspnsv-table-column-bigger ee-rspnsv-table-hide-on-mobile',\n\t\t\tvalue: sortingEnabled ? (\n\t\t\t\tdatetime.name\n\t\t\t) : (\n\t\t\t\t<EditableName className={'ee-entity-list-text ee-focus-priority-5'} entity={datetime} view={'table'} />\n\t\t\t),\n\t\t};\n\n\t\tconst cellsData = [\n\t\t\t{\n\t\t\t\tkey: 'stripe',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: `ee-date-list-cell ee-entity-list-status-stripe ${bgClassName} ee-rspnsv-table-column-nano`,\n\t\t\t\tvalue: <div className={'ee-rspnsv-table-show-on-mobile'}>{datetime.name}</div>,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'checkbox',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-cell ee-date-list-col-checkbox ee-rspnsv-table-column-micro',\n\t\t\t\tvalue: <Checkbox id={datetime.id} />,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'id',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-cell ee-date-list-col-id ee-rspnsv-table-column-nano ee-number-column',\n\t\t\t\tvalue: id,\n\t\t\t},\n\t\t\tname,\n\t\t\t{\n\t\t\t\tkey: 'start',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-cell ee-date-list-col-start ee-rspnsv-table-column-default',\n\t\t\t\tvalue: format(new Date(datetime.startDate), ENTITY_LIST_DATE_TIME_FORMAT),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'end',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-cell ee-date-list-col-end ee-rspnsv-table-column-default',\n\t\t\t\tvalue: format(new Date(datetime.endDate), ENTITY_LIST_DATE_TIME_FORMAT),\n\t\t\t},\n\t\t\tcapacity,\n\t\t\t{\n\t\t\t\tkey: 'sold',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-cell ee-date-list-col-sold ee-rspnsv-table-column-tiny ee-number-column',\n\t\t\t\tvalue: datetime.sold || 0,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'registrations',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName:\n\t\t\t\t\t'ee-date-list-cell ee-date-list-col-registrations ee-rspnsv-table-column-smaller ee-centered-column',\n\t\t\t\tvalue: sortingEnabled ? '-' : <DateRegistrationsLink datetime={datetime} />,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'actions',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-cell ee-date-list-col-actions ee-actions-column ee-rspnsv-table-column-big',\n\t\t\t\tvalue: sortingEnabled ? '-' : <DateActionsMenu entity={datetime} />,\n\t\t\t},\n\t\t];\n\n\t\tconst filterCells = filter(filterCellByStartOrEndDate(displayStartOrEndDate));\n\n\t\tconst cells = pipe(filterCells, addZebraStripes)(cellsData);\n\n\t\treturn {\n\t\t\tcells,\n\t\t\tclassName: `ee-editor-date-list-view-row ${statusClassName}`,\n\t\t\tid: `ee-editor-date-list-view-row-${datetime.id}`,\n\t\t\tkey: `row-${datetime.id}`,\n\t\t\ttype: 'row',\n\t\t};\n\t}, []);\n};\n\nexport default useBodyRowGenerator;\n","import React from 'react';\nimport { __ } from '@wordpress/i18n';\n\nimport { SelectInput } from '@eventespresso/components';\nimport { useMemoStringify } from '@eventespresso/hooks';\n\ntype Props = {\n\tvalue: string;\n\tsetValue: (value: string) => void;\n};\nconst Select: React.FC<Props> = React.memo(({ value, setValue }) => {\n\tconst options = useMemoStringify([\n\t\t{\n\t\t\tvalue: '',\n\t\t\tlabel: __('bulk actions'),\n\t\t},\n\t\t{\n\t\t\tvalue: 'edit-details',\n\t\t\tlabel: __('edit datetime details'),\n\t\t},\n\t\t{\n\t\t\tvalue: 'delete',\n\t\t\tlabel: __('delete datetimes'),\n\t\t},\n\t]);\n\treturn <SelectInput value={value} options={options} onChangeValue={setValue} />;\n});\n\nexport default Select;\n","import { __ } from '@wordpress/i18n';\nimport * as yup from 'yup';\n\nimport { yupToFinalFormErrors } from '@eventespresso/form';\nimport { BulkEditFormShape } from './types';\n\nexport const validate = async (values: BulkEditFormShape): Promise<any> => {\n\treturn await yupToFinalFormErrors(validationSchema, values);\n};\n\nconst validationSchema = yup.object({\n\tname: yup.string().min(3, () => __('Name must be at least three characters')),\n});\n","import { useMemo, useCallback } from 'react';\nimport { __ } from '@wordpress/i18n';\nimport { pick } from 'ramda';\n\nimport { CalendarOutlined, ControlOutlined, ProfileOutlined } from '@eventespresso/icons';\nimport { intervalsToOptions, Intervals, DATE_INTERVALS } from '@eventespresso/services';\nimport type { EspressoFormProps } from '@eventespresso/form';\n\nimport { validate } from './formValidation';\nimport type { BulkEditFormShape } from './types';\nimport { useMemoStringify } from '@eventespresso/hooks';\n\ntype DateFormConfig = EspressoFormProps<BulkEditFormShape>;\n\nconst unitOptions = intervalsToOptions(\n\tpick<Intervals, keyof Intervals>(['months', 'weeks', 'days', 'hours', 'minutes'], DATE_INTERVALS),\n\ttrue\n);\n\nconst useBulkEditFormConfig = (config?: EspressoFormProps<BulkEditFormShape>): DateFormConfig => {\n\tconst { onSubmit } = config;\n\n\tconst onSubmitFrom: DateFormConfig['onSubmit'] = useCallback(\n\t\t(values, form, ...restParams) => {\n\t\t\treturn onSubmit(values, form, ...restParams);\n\t\t},\n\t\t[onSubmit]\n\t);\n\n\tconst adjacentFormItemProps = useMemoStringify({\n\t\tclassName: 'ee-form-item-pair',\n\t});\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\t...config,\n\t\t\tonSubmit: onSubmitFrom,\n\t\t\tvalidate,\n\t\t\tlayout: 'horizontal',\n\t\t\tdebugFields: ['values', 'errors'],\n\t\t\tsections: [\n\t\t\t\t{\n\t\t\t\t\tname: 'basics',\n\t\t\t\t\ticon: ProfileOutlined,\n\t\t\t\t\ttitle: __('Basics'),\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\t\tlabel: __('Name'),\n\t\t\t\t\t\t\tfieldType: 'text',\n\t\t\t\t\t\t\tmin: 3,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'description',\n\t\t\t\t\t\t\tlabel: __('Description'),\n\t\t\t\t\t\t\tfieldType: 'textarea',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'dates',\n\t\t\t\t\ticon: CalendarOutlined,\n\t\t\t\t\ttitle: __('Dates'),\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'shiftDates',\n\t\t\t\t\t\t\tlabel: __('Shift dates'),\n\t\t\t\t\t\t\tfieldType: 'group',\n\t\t\t\t\t\t\tformControlProps: {\n\t\t\t\t\t\t\t\tclassName: 'shift-dates',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tsubFields: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'value',\n\t\t\t\t\t\t\t\t\tfieldType: 'number',\n\t\t\t\t\t\t\t\t\tmin: 1,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'unit',\n\t\t\t\t\t\t\t\t\tfieldType: 'select',\n\t\t\t\t\t\t\t\t\toptions: unitOptions,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'type',\n\t\t\t\t\t\t\t\t\tfieldType: 'select',\n\t\t\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: '',\n\t\t\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: __('earlier'),\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'earlier',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: __('later'),\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'later',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'details',\n\t\t\t\t\ticon: ControlOutlined,\n\t\t\t\t\ttitle: __('Details'),\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'capacity',\n\t\t\t\t\t\t\tlabel: __('Capacity'),\n\t\t\t\t\t\t\tfieldType: 'number',\n\t\t\t\t\t\t\tparseAsInfinity: true,\n\t\t\t\t\t\t\tmin: -1,\n\t\t\t\t\t\t\tformControlProps: adjacentFormItemProps,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t],\n\t\t}),\n\t\t[adjacentFormItemProps, config, onSubmitFrom]\n\t);\n};\n\nexport default useBulkEditFormConfig;\n","import React from 'react';\nimport { __ } from '@wordpress/i18n';\n\nconst Warning: React.FC = () => {\n\treturn (\n\t\t<div className='ee-form-error-message'>\n\t\t\t<p>\n\t\t\t\t{__('Note: ')}\n\t\t\t\t{__('any changes will be applied to ALL of the selected dates.')}\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n\nexport default Warning;\n","import React, { useState, useEffect } from 'react';\nimport { __ } from '@wordpress/i18n';\nimport type { FormRenderProps } from 'react-final-form';\nimport type { FormState } from 'final-form';\n\nimport { Button, ButtonRow, ButtonType, useConfirmationDialog } from '@eventespresso/components';\nimport { BulkEditFormShape } from './types';\n\nconst subscription = { submitting: true, hasValidationErrors: true, hasSubmitErrors: true, pristine: true };\n\nconst Submit: React.FC<Pick<FormRenderProps<BulkEditFormShape>, 'form'>> = ({ form }) => {\n\tconst [formState, setFormState] = useState<Partial<FormState<BulkEditFormShape>>>({});\n\n\tconst { submitting, hasValidationErrors, hasSubmitErrors, pristine } = formState;\n\tconst isSubmitDisabled = submitting || hasValidationErrors || hasSubmitErrors;\n\n\tuseEffect(() => {\n\t\t// subscribe to RFF state.\n\t\tconst unsubscribe = form.subscribe((state) => {\n\t\t\tsetFormState(state);\n\t\t}, subscription);\n\n\t\t// housekeeping\n\t\treturn unsubscribe;\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tconst { confirmationDialog, onOpen } = useConfirmationDialog({\n\t\tmessage: __('Are you sure you want to update the selected dates?'),\n\t\ttitle: __('Bulk update date details'),\n\t\tonConfirm: form.submit,\n\t});\n\n\treturn (\n\t\t<ButtonRow rightAligned>\n\t\t\t<Button\n\t\t\t\tbuttonText={__('Submit')}\n\t\t\t\tbuttonType={ButtonType.PRIMARY}\n\t\t\t\tisDisabled={isSubmitDisabled}\n\t\t\t\ttype='submit'\n\t\t\t\tonClick={onOpen}\n\t\t\t/>\n\t\t\t{confirmationDialog}\n\t\t\t<Button buttonText={__('Reset')} isDisabled={pristine} type='reset' onClick={() => form.reset()} />\n\t\t</ButtonRow>\n\t);\n};\n\nexport default Submit;\n","import React from 'react';\nimport type { FormRenderProps } from 'react-final-form';\n\nimport Submit from './Submit';\n\nconst FormWrapper: React.FC<FormRenderProps> = ({ children, form }) => {\n\treturn (\n\t\t<>\n\t\t\t{children}\n\t\t\t<Submit form={form} />\n\t\t</>\n\t);\n};\n\nexport default FormWrapper;\n","import { useCallback } from 'react';\n\nimport { useBulkEdit, shiftDate } from '@eventespresso/services';\nimport { entitiesWithGuIdInArray } from '@eventespresso/predicates';\nimport { useDatetimes, BulkUpdateDatetimeInput, useBulkEditDatetimes } from '@eventespresso/edtr-services';\n\nimport type { BulkEditFormShape } from './types';\n\ntype Callback = (values: BulkEditFormShape) => void;\n\nconst useSubmitForm = (onClose: VoidFunction): Callback => {\n\tconst { getSelected, unSelectAll } = useBulkEdit();\n\tconst allDates = useDatetimes();\n\tconst { updateEntities } = useBulkEditDatetimes();\n\treturn useCallback<Callback>(\n\t\t({ shiftDates, ...values }) => {\n\t\t\t// pull the shutter down\n\t\t\tonClose();\n\t\t\t// back to basics\n\t\t\tunSelectAll();\n\t\t\t// This contains the unique input for each date.\n\t\t\tlet uniqueInputs: BulkUpdateDatetimeInput['uniqueInputs'] = [];\n\t\t\t// we need to shift the dates.\n\t\t\tif (shiftDates?.unit && shiftDates?.value && shiftDates?.type) {\n\t\t\t\t// get full date objects from the selected IDs\n\t\t\t\tconst selectedDates = entitiesWithGuIdInArray(allDates, getSelected());\n\t\t\t\t// keep the date shifter ready\n\t\t\t\tconst shiftTheDate = shiftDate(shiftDates);\n\t\t\t\t// shift start and end dates for the selected dates\n\t\t\t\tuniqueInputs = selectedDates.map((datetime) => {\n\t\t\t\t\tconst startDate = shiftTheDate(datetime.startDate).toISOString();\n\t\t\t\t\tconst endDate = shiftTheDate(datetime.endDate).toISOString();\n\t\t\t\t\treturn { id: datetime.id, startDate, endDate };\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// otherwise we just need the ids for uniqueInputs\n\t\t\t\tuniqueInputs = getSelected().map((id) => ({ id }));\n\t\t\t}\n\n\t\t\t// we need to add id to shared input to avoid GQL schema yelling at us.\n\t\t\tconst sharedInput = { ...values, id: '' };\n\t\t\t// do the thing\n\t\t\tupdateEntities({ uniqueInputs, sharedInput });\n\t\t},\n\t\t[allDates, getSelected, onClose, unSelectAll, updateEntities]\n\t);\n};\n\nexport default useSubmitForm;\n","import React from 'react';\nimport { __ } from '@wordpress/i18n';\n\nimport { EntityEditModal } from '@eventespresso/components';\nimport useBulkEditFormConfig from './useBulkEditFormConfig';\nimport { EspressoForm } from '@eventespresso/form';\nimport Warning from './Warning';\nimport FormWrapper from './FormWrapper';\nimport useSubmitForm from './useSubmitForm';\n\nimport './styles.scss';\n\ntype EditDetailsProps = {\n\tonClose: VoidFunction;\n};\n\nconst EditDetails: React.FC<EditDetailsProps> = ({ onClose }) => {\n\tconst onSubmit = useSubmitForm(onClose);\n\tconst formConfig = useBulkEditFormConfig({ onSubmit });\n\n\treturn (\n\t\t<EntityEditModal\n\t\t\tisOpen={true}\n\t\t\tonClose={onClose}\n\t\t\tcloseOnOverlayClick={true}\n\t\t\ttitle={__('Bulk edit date details')}\n\t\t>\n\t\t\t<Warning />\n\t\t\t<EspressoForm {...formConfig} formWrapper={FormWrapper} />\n\t\t</EntityEditModal>\n\t);\n};\n\nexport default EditDetails;\n","import React, { useState, useCallback } from 'react';\nimport { __ } from '@wordpress/i18n';\nimport { useDisclosure } from '@chakra-ui/hooks';\n\nimport { Button } from '@eventespresso/components';\nimport { Box } from '@eventespresso/adapters';\nimport { useBulkEdit } from '@eventespresso/services';\n\nimport Select from './Select';\nimport { EditDetails } from '../details';\n\nconst Actions: React.FC = () => {\n\tconst [action, setAction] = useState('');\n\tconst { getSelected } = useBulkEdit();\n\n\tconst setValue = useCallback((value) => setAction(value), []);\n\n\tconst { isOpen, onOpen, onClose } = useDisclosure();\n\n\tconst isApplyDisabled = !action || !getSelected().length;\n\n\treturn (\n\t\t<Box display='flex' alignItems='center' maxWidth='fit-content'>\n\t\t\t<Select value={action} setValue={setValue} />\n\t\t\t<Button onClick={onOpen} buttonText={__('apply')} isDisabled={isApplyDisabled} />\n\t\t\t{isOpen && <>{action === 'edit-details' && <EditDetails onClose={onClose} />}</>}\n\t\t</Box>\n\t);\n};\n\nexport default Actions;\n","import React from 'react';\nimport { __ } from '@wordpress/i18n';\n\nimport { EntityTable } from '@eventespresso/components';\nimport useHeaderRowGenerator from './useHeaderRowGenerator';\nimport useBodyRowGenerator from './useBodyRowGenerator';\nimport { useDatesListContext } from '@edtrServices/context/EntityListContext';\nimport { useReorderDatetimes } from '@eventespresso/edtr-services';\nimport { withBulkEdit } from '@eventespresso/services';\nimport { Actions } from '../bulkEdit';\n\nimport './styles.scss';\n\n/**\n * Displays event date details in a standard list table like view\n */\nconst TableView: React.FC = () => {\n\tconst { filterState, filteredEntities } = useDatesListContext();\n\n\tconst { sortResponder: sortDates } = useReorderDatetimes(filteredEntities);\n\n\tconst bodyRowGenerator = useBodyRowGenerator();\n\tconst headerRowGenerator = useHeaderRowGenerator();\n\n\treturn (\n\t\t<>\n\t\t\t<Actions />\n\t\t\t<EntityTable\n\t\t\t\tentities={filteredEntities}\n\t\t\t\tfilterState={filterState}\n\t\t\t\tbodyRowGenerator={bodyRowGenerator}\n\t\t\t\theaderRowGenerator={headerRowGenerator}\n\t\t\t\tclassName={'ee-dates-list-list-view ee-fade-in'}\n\t\t\t\ttableId='date-entities-table-view'\n\t\t\t\ttableCaption={__('Event Dates')}\n\t\t\t\tonSort={sortDates}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default withBulkEdit(TableView);\n"],"sourceRoot":""}