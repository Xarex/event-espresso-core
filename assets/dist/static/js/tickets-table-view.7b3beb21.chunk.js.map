{"version":3,"sources":["../domains/eventEditor/src/ui/tickets/TicketRegistrationsLink.tsx","../domains/eventEditor/src/ui/tickets/ticketsList/cardView/TicketQuantity.tsx","../domains/eventEditor/src/ui/tickets/ticketsList/editable/EditableDesc.tsx","../domains/eventEditor/src/ui/tickets/ticketsList/editable/EditableName.tsx","../domains/eventEditor/src/ui/tickets/hooks/useRecalculateBasePrice.ts","../domains/eventEditor/src/ui/tickets/ticketsList/editable/EditablePrice.tsx","../domains/eventEditor/src/ui/tickets/hooks/useTicketsActionMenuItems.ts","../domains/eventEditor/src/ui/tickets/ticketsList/actionsMenu/TicketActionsMenu.tsx","../domains/eventEditor/src/ui/tickets/ticketsList/tableView/Checkbox.tsx","../domains/eventEditor/src/ui/tickets/ticketsList/tableView/useHeaderRowGenerator.tsx","../domains/eventEditor/src/ui/tickets/ticketsList/tableView/useBodyRowGenerator.tsx","../domains/eventEditor/src/ui/tickets/ticketsList/bulkEdit/details/formValidation.ts","../domains/eventEditor/src/ui/tickets/ticketsList/bulkEdit/details/useBulkEditFormConfig.ts","../domains/eventEditor/src/ui/tickets/ticketsList/bulkEdit/details/useSubmitForm.ts","../domains/eventEditor/src/ui/tickets/ticketsList/bulkEdit/details/EditDetails.tsx","../domains/eventEditor/src/ui/tickets/ticketsList/bulkEdit/actions/Actions.tsx","../domains/eventEditor/src/ui/tickets/ticketsList/tableView/TableView.tsx"],"names":["TicketRegistrationsLink","ticket","admin","useConfig","siteUrl","adminUrl","getAdminUrl","adminSiteUrl","page","ADMIN_ROUTES","REGISTRATIONS","eventId","useEventId","regListUrl","addQueryArgs","event_id","ticket_id","dbId","return","countTitle","__","tooltip","tooltipProps","useMemoStringify","placement","count","registrationCount","title","emphasizeZero","offset","href","React","memo","getPropsAreEqual","TicketQuantity","entity","updateEntity","useTicketMutator","id","onChange","useCallback","qty","quantity","parseInfinity","onChangeValue","value","EditableDesc","className","onChangeDesc","description","cacheId","ticketDesc","EditableName","view","onChangeName","name","ticketName","fitText","tag","useRecalculateBasePrice","ticketId","getDataState","useInitialState","usePriceMutator","calculateBasePrice","filter","isBasePrice","basePrice","amount","EditablePrice","recalculateBasePrice","onChangePrice","price","parseFloat","reverseCalculate","wrapperProps","placeholder","useTicketsActionMenuItems","useEntityActionsMenuItems","TicketActionsMenu","props","menuItems","Checkbox","visibleTicketIds","useEdtrState","visibleEntityIds","useHeaderRowGenerator","filterState","displayStartOrEndDate","cells","key","type","filterCellByStartOrEndDate","primary","useBodyRowGenerator","formatAmount","useMoneyDisplay","sortingEnabled","bgClassName","getTicketBackgroundColorClassName","shortenGuid","statusClassName","ticketStatus","cellsData","format","Date","startDate","ENTITY_LIST_DATE_TIME_FORMAT","endDate","sold","pipe","addZebraStripesOnMobile","validate","values","a","yupToFinalFormErrors","validationSchema","yup","min","unitOptions","intervalsToOptions","pick","DATE_INTERVALS","useBulkEditFormConfig","config","onSubmit","onSubmitFrom","form","restParams","adjacentFormItemProps","useMemo","layout","debugFields","sections","icon","ProfileOutlined","fields","label","fieldType","CalendarOutlined","formControlProps","subFields","options","ControlOutlined","parseAsInfinity","useSubmitForm","onClose","useBulkEdit","getSelected","unSelectAll","allTickets","useTickets","updateEntities","useBulkEditTickets","formData","input","formToBulkUpdateInput","EditDetails","isOpen","formConfig","warning","Actions","useState","action","setAction","useDisclosure","onOpen","onApply","defaultAction","withBulkEdit","useTicketsListContext","filteredEntities","sortTickets","useReorderTickets","sortResponder","bodyRowGenerator","headerRowGenerator","entities","tableId","tableCaption","onSort"],"mappings":"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","file":"static/js/tickets-table-view.7b3beb21.chunk.js","sourcesContent":["import React from 'react';\nimport { addQueryArgs } from '@wordpress/url';\nimport { __ } from '@wordpress/i18n';\n\nimport { ADMIN_ROUTES } from '@eventespresso/constants';\nimport { getAdminUrl, useEventId } from '@eventespresso/edtr-services';\nimport { getPropsAreEqual, useConfig } from '@eventespresso/services';\nimport { useMemoStringify } from '@eventespresso/hooks';\nimport { RegistrationsLink, ItemCount } from '@eventespresso/components';\nimport { Ticket } from '@eventespresso/edtr-services';\nimport type { TooltipProps } from '@eventespresso/adapters';\n\ninterface Props {\n\tticket: Ticket;\n}\n\nconst TicketRegistrationsLink: React.FC<Props> = ({ ticket }) => {\n\tconst {\n\t\tsiteUrl: { admin },\n\t} = useConfig();\n\tconst adminUrl = getAdminUrl({ adminSiteUrl: admin, page: ADMIN_ROUTES.REGISTRATIONS });\n\tconst eventId = useEventId();\n\tconst regListUrl = addQueryArgs(adminUrl, {\n\t\tevent_id: eventId,\n\t\tticket_id: ticket.dbId,\n\t\treturn: 'edit',\n\t});\n\tconst countTitle = __('total registrations.');\n\tconst tooltip = __('view registrations for this ticket.');\n\tconst tooltipProps = useMemoStringify<TooltipProps>({ placement: 'top' });\n\n\treturn (\n\t\t<ItemCount count={ticket.registrationCount} title={countTitle} emphasizeZero={false} offset={[12, -4]}>\n\t\t\t<RegistrationsLink href={regListUrl} tooltip={tooltip} tooltipProps={tooltipProps} />\n\t\t</ItemCount>\n\t);\n};\n\nexport default React.memo(TicketRegistrationsLink, getPropsAreEqual(['ticket', 'cacheId']));\n","import React, { useCallback } from 'react';\n\nimport { parseInfinity, getPropsAreEqual } from '@eventespresso/services';\nimport { InlineEditInfinity, TextProps } from '@eventespresso/components';\nimport { useTicketMutator } from '@eventespresso/edtr-services';\nimport type { TicketItemProps } from '../types';\n\nconst TicketQuantity: React.FC<TicketItemProps> = ({ entity: ticket }) => {\n\tconst { updateEntity } = useTicketMutator(ticket.id);\n\n\tconst onChange: TextProps['onChange'] = useCallback(\n\t\t(qty) => {\n\t\t\tconst quantity = parseInfinity(qty);\n\t\t\tif (quantity !== ticket.quantity) {\n\t\t\t\tupdateEntity({ quantity });\n\t\t\t}\n\t\t},\n\t\t[ticket.quantity, updateEntity]\n\t);\n\n\treturn <InlineEditInfinity onChangeValue={onChange} value={`${ticket.quantity}`} />;\n};\n\nexport default React.memo(TicketQuantity, getPropsAreEqual(['entity', 'cacheId']));\n","import React, { useCallback } from 'react';\nimport { __ } from '@wordpress/i18n';\n\nimport type { TicketItemProps } from '../types';\nimport { useTicketMutator } from '@eventespresso/edtr-services';\nimport { InlineEditTextArea } from '@eventespresso/components';\nimport { getPropsAreEqual } from '@eventespresso/services';\n\ninterface EditableDescProps extends TicketItemProps {\n\tclassName?: string;\n}\n\nconst EditableDesc: React.FC<EditableDescProps> = ({ entity: ticket, className }) => {\n\tconst { updateEntity } = useTicketMutator(ticket.id);\n\n\tconst onChangeDesc = useCallback(\n\t\t(description: string): void => {\n\t\t\tif (description !== ticket.description) {\n\t\t\t\tupdateEntity({ description });\n\t\t\t}\n\t\t},\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t[ticket.cacheId, updateEntity]\n\t);\n\n\tconst ticketDesc = ticket.description ? ticket.description : __('Edit description...');\n\n\treturn <InlineEditTextArea className={className} onChangeValue={onChangeDesc} value={ticketDesc} />;\n};\n\nexport default React.memo(EditableDesc, getPropsAreEqual(['entity', 'description']));\n","import React, { useCallback } from 'react';\nimport { __ } from '@wordpress/i18n';\n\nimport type { TicketItemProps } from '../types';\nimport { useTicketMutator } from '@eventespresso/edtr-services';\nimport { InlineEditText } from '@eventespresso/components';\nimport { getPropsAreEqual } from '@eventespresso/services';\n\ninterface EditableNameProps extends TicketItemProps {\n\tclassName?: string;\n\tview?: 'card' | 'table';\n}\n\nconst EditableName: React.FC<EditableNameProps> = ({ className, entity: ticket, view = 'card' }) => {\n\tconst { updateEntity } = useTicketMutator(ticket.id);\n\n\tconst onChangeName = useCallback(\n\t\t(name: string): void => {\n\t\t\tif (name !== ticket.name) {\n\t\t\t\tupdateEntity({ name });\n\t\t\t}\n\t\t},\n\t\t[ticket.name, updateEntity]\n\t);\n\n\tconst ticketName = ticket.name ? ticket.name : __('Edit title...');\n\n\treturn (\n\t\t<InlineEditText\n\t\t\tfitText={view === 'card'}\n\t\t\ttag={view === 'table' ? 'p' : 'h4'}\n\t\t\tclassName={className}\n\t\t\tonChangeValue={onChangeName}\n\t\t\tvalue={ticketName}\n\t\t/>\n\t);\n};\n\nexport default React.memo(EditableName, getPropsAreEqual(['entity', 'name']));\n","import { useCallback } from 'react';\n\nimport { EntityId } from '@eventespresso/data';\nimport { calculateBasePrice, useInitialState } from '@eventespresso/tpc';\nimport { isBasePrice } from '@eventespresso/predicates';\nimport { usePriceMutator } from '@eventespresso/edtr-services';\n\nconst useRecalculateBasePrice = (ticketId: EntityId): VoidFunction => {\n\t// This will give us the exact state expected by `calculateBasePrice()`\n\tconst getDataState = useInitialState({ ticketId });\n\tconst { updateEntity } = usePriceMutator();\n\n\treturn useCallback(() => {\n\t\t// get the list of updated prices with the amount of base price updated\n\t\tconst newPrices = calculateBasePrice(getDataState(null));\n\t\t// the price if present should be the basePrice\n\t\tconst [basePrice] = newPrices.filter(isBasePrice);\n\n\t\t// if we are lucky\n\t\tif (basePrice?.id) {\n\t\t\tconst { id, amount } = basePrice;\n\t\t\t// update the base price\n\t\t\tupdateEntity({ id, amount });\n\t\t}\n\t}, [getDataState, updateEntity]);\n};\n\nexport default useRecalculateBasePrice;\n","import React, { useCallback } from 'react';\nimport { __ } from '@wordpress/i18n';\n\nimport type { TicketItemProps } from '../types';\nimport { useTicketMutator } from '@eventespresso/edtr-services';\nimport { getPropsAreEqual } from '@eventespresso/services';\nimport { CurrencyInput } from '@eventespresso/components';\nimport useRecalculateBasePrice from '../../hooks/useRecalculateBasePrice';\nimport { useMemoStringify } from '@eventespresso/hooks';\n\ninterface EditablePriceProps extends TicketItemProps {\n\tclassName?: string;\n}\n\nconst EditablePrice: React.FC<EditablePriceProps> = ({ entity: ticket, className }) => {\n\tconst { updateEntity } = useTicketMutator(ticket.id);\n\tconst recalculateBasePrice = useRecalculateBasePrice(ticket.id);\n\tconst onChangePrice = useCallback(\n\t\t({ amount: price }: any): void => {\n\t\t\tprice = parseFloat(price);\n\t\t\tif (price !== ticket.price) {\n\t\t\t\tupdateEntity({ price, reverseCalculate: true });\n\t\t\t\trecalculateBasePrice();\n\t\t\t}\n\t\t},\n\t\t[recalculateBasePrice, ticket.price, updateEntity]\n\t);\n\n\tconst wrapperProps = useMemoStringify({ className });\n\n\treturn (\n\t\t<CurrencyInput\n\t\t\tid={ticket.id}\n\t\t\tamount={ticket.price}\n\t\t\tplaceholder={__('set price...')}\n\t\t\twrapperProps={wrapperProps}\n\t\t\tonChange={onChangePrice}\n\t\t\ttag={'h3'}\n\t\t/>\n\t);\n};\n\nexport default React.memo(EditablePrice, getPropsAreEqual(['entity', 'price']));\n","import React from 'react';\n\nimport { Ticket } from '@eventespresso/edtr-services';\nimport { useEntityActionsMenuItems } from '@edtrHooks/index';\n\nconst useTicketsActionMenuItems = (ticket: Ticket): Array<React.ReactNode> => {\n\treturn useEntityActionsMenuItems('ticket', ticket);\n};\n\nexport default useTicketsActionMenuItems;\n","import React from 'react';\n\nimport type { ActionsMenuComponentProps } from '@eventespresso/registry';\nimport { EntityActionsMenu } from '@eventespresso/components';\nimport useTicketsActionMenuItems from '../../hooks/useTicketsActionMenuItems';\nimport { Ticket } from '@eventespresso/edtr-services';\nimport { getPropsAreEqual } from '@eventespresso/services';\n\nconst TicketActionsMenu: React.FC<ActionsMenuComponentProps<Ticket>> = ({ entity, ...props }) => {\n\tconst menuItems = useTicketsActionMenuItems(entity);\n\n\treturn <EntityActionsMenu {...props} menuItems={menuItems} />;\n};\n\nexport default React.memo(TicketActionsMenu, getPropsAreEqual(['entity', 'cacheId']));\n","import React from 'react';\n\nimport { ActionCheckbox, ActionCheckboxProps } from '@eventespresso/components';\n\nimport { useEdtrState } from '@edtrHooks/edtrState';\n\nconst Checkbox: React.FC<ActionCheckboxProps> = (props) => {\n\tconst { visibleTicketIds } = useEdtrState();\n\n\treturn <ActionCheckbox {...props} visibleEntityIds={visibleTicketIds} />;\n};\n\nexport default Checkbox;\n","import React, { useCallback } from 'react';\nimport { __ } from '@wordpress/i18n';\n\nimport type { Cell, HeaderRowGeneratorFn } from '@eventespresso/components';\nimport { filterCellByStartOrEndDate } from '@eventespresso/edtr-services';\nimport { TicketsFilterStateManager } from '@edtrServices/filterState';\nimport Checkbox from './Checkbox';\n\ntype TicketsTableHeaderRowGen = HeaderRowGeneratorFn<TicketsFilterStateManager>;\n\nconst useHeaderRowGenerator = (): TicketsTableHeaderRowGen => {\n\treturn useCallback<TicketsTableHeaderRowGen>((filterState) => {\n\t\tconst { displayStartOrEndDate } = filterState;\n\n\t\tconst cellsData: Array<Cell> = [\n\t\t\t{\n\t\t\t\tkey: 'stripe',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-ticket-list-col-hdr ee-entity-list-status-stripe ee-rspnsv-table-column-nano',\n\t\t\t\tvalue: '',\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'checkbox',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-date-list-col-checkbox ee-rspnsv-table-column-micro',\n\t\t\t\tvalue: <Checkbox />,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'id',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-ticket-list-col-hdr ee-ticket-list-col-id ee-number-column ee-rspnsv-table-column-nano',\n\t\t\t\tvalue: __('ID'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'name',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-ticket-list-col-hdr ee-ticket-list-col-name ee-rspnsv-table-column-bigger',\n\t\t\t\tvalue: __('Name'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'start',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-ticket-list-col-hdr ee-ticket-list-col-name-start ee-rspnsv-table-column-default',\n\t\t\t\tvalue: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-long-label'}>{__('Goes on Sale')}</span>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-short-label'}>{__('On Sale')}</span>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'end',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-ticket-list-col-hdr ee-ticket-list-col-end ee-rspnsv-table-column-default',\n\t\t\t\tvalue: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-long-label'}>{__('Sale Ends')}</span>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-short-label'}>{__('Ends')}</span>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'price',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName:\n\t\t\t\t\t'ee-ticket-list-col-hdr ee-ticket-list-col-price ee-rspnsv-table-column-tiny ee-number-column',\n\t\t\t\tvalue: __('Price'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'quantity',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName:\n\t\t\t\t\t'ee-ticket-list-col-hdr ee-ticket-list-col-quantity ee-rspnsv-table-column-tiny ee-number-column',\n\t\t\t\tvalue: __('Quantity'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'sold',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName:\n\t\t\t\t\t'ee-ticket-list-col-hdr ee-ticket-list-col-sold ee-rspnsv-table-column-tiny ee-number-column',\n\t\t\t\tvalue: __('Sold'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'registrations',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName:\n\t\t\t\t\t'ee-ticket-list-col-hdr ee-ticket-list-col-registrations ee-rspnsv-table-column-smaller ee-centered-column',\n\t\t\t\tvalue: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-long-label'}>{__('Registrations')}</span>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-short-label'}>{__('Regs')}</span>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'actions',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-ticket-list-col-hdr ee-actions-column ee-rspnsv-table-column-big ee-centered-column',\n\t\t\t\tvalue: <span className={'ee-rspnsv-table-long-label'}>{__('Actions')}</span>,\n\t\t\t},\n\t\t];\n\n\t\tconst cells = cellsData.filter(filterCellByStartOrEndDate(displayStartOrEndDate));\n\n\t\treturn {\n\t\t\tcells,\n\t\t\tclassName: 'ee-editor-ticket-list-items-header-row',\n\t\t\tkey: 'ticket-header-row',\n\t\t\tprimary: true,\n\t\t\ttype: 'row',\n\t\t};\n\t}, []);\n};\n\nexport default useHeaderRowGenerator;\n","import React, { useCallback } from 'react';\nimport { format } from 'date-fns';\nimport { filter, pipe } from 'ramda';\n\nimport { Cell, addZebraStripesOnMobile } from '@eventespresso/components';\nimport { filterCellByStartOrEndDate } from '@eventespresso/edtr-services';\nimport { ENTITY_LIST_DATE_TIME_FORMAT } from '@eventespresso/constants';\nimport { getTicketBackgroundColorClassName, ticketStatus } from '@eventespresso/helpers';\nimport { shortenGuid } from '@eventespresso/services';\nimport { Ticket } from '@eventespresso/edtr-services';\nimport TicketActionsMenu from '@edtrUI/tickets/ticketsList/actionsMenu/TicketActionsMenu';\nimport { useMoneyDisplay } from '@eventespresso/services';\nimport TicketQuantity from '../cardView/TicketQuantity';\nimport { BodyRowGeneratorFn } from '@eventespresso/components';\nimport { TicketsFilterStateManager } from '@edtrServices/filterState';\nimport { EditableName } from '../editable';\nimport TicketRegistrationsLink from '../../TicketRegistrationsLink';\nimport Checkbox from './Checkbox';\n\nimport '../../../../../../../packages/styles/src/root/entity-status.css';\n\ntype TicketsTableBodyRowGen = BodyRowGeneratorFn<Ticket, TicketsFilterStateManager>;\n\nconst useBodyRowGenerator = (): TicketsTableBodyRowGen => {\n\tconst { formatAmount } = useMoneyDisplay();\n\n\treturn useCallback<TicketsTableBodyRowGen>(\n\t\t({ entity: ticket, filterState }) => {\n\t\t\tconst { displayStartOrEndDate, sortingEnabled } = filterState;\n\n\t\t\tconst bgClassName = getTicketBackgroundColorClassName(ticket);\n\t\t\tconst id = ticket.dbId || shortenGuid(ticket.id);\n\t\t\tconst statusClassName = ticketStatus(ticket);\n\n\t\t\tconst name = {\n\t\t\t\tkey: 'name',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName:\n\t\t\t\t\t'ee-ticket-list-cell ee-ticket-list-col-name ee-col-name ee-rspnsv-table-column-bigger ee-rspnsv-table-hide-on-mobile',\n\t\t\t\tvalue: sortingEnabled ? (\n\t\t\t\t\tticket.name\n\t\t\t\t) : (\n\t\t\t\t\t<EditableName\n\t\t\t\t\t\tclassName={'ee-entity-list-text ee-focus-priority-5'}\n\t\t\t\t\t\tentity={ticket}\n\t\t\t\t\t\tview={'table'}\n\t\t\t\t\t/>\n\t\t\t\t),\n\t\t\t};\n\n\t\t\tconst quantity = {\n\t\t\t\tkey: 'quantity',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName:\n\t\t\t\t\t'ee-ticket-list-cell ee-ticket-list-col-quantity ee-rspnsv-table-column-tiny ee-number-column',\n\t\t\t\tvalue: sortingEnabled ? ticket.quantity : <TicketQuantity entity={ticket} />,\n\t\t\t};\n\n\t\t\tconst cellsData: Array<Cell> = [\n\t\t\t\t{\n\t\t\t\t\tkey: 'stripe',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName: `ee-ticket-list-cell ee-entity-list-status-stripe ${bgClassName} ee-rspnsv-table-column-nano`,\n\t\t\t\t\tvalue: <div className={'ee-rspnsv-table-show-on-mobile'}>{ticket.name}</div>,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'checkbox',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName: 'ee-date-list-cell ee-date-list-col-checkbox ee-rspnsv-table-column-micro',\n\t\t\t\t\tvalue: <Checkbox id={ticket.id} />,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'id',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName: 'ee-ticket-list-cell ee-ticket-list-col-id ee-rspnsv-table-column-nano ee-number-column',\n\t\t\t\t\tvalue: id,\n\t\t\t\t},\n\t\t\t\tname,\n\t\t\t\t{\n\t\t\t\t\tkey: 'start',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName: 'ee-ticket-list-cell ee-ticket-list-col-start ee-rspnsv-table-column-default',\n\t\t\t\t\tvalue: format(new Date(ticket.startDate), ENTITY_LIST_DATE_TIME_FORMAT),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'end',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName: 'ee-ticket-list-cell ee-ticket-list-col-end ee-rspnsv-table-column-default',\n\t\t\t\t\tvalue: format(new Date(ticket.endDate), ENTITY_LIST_DATE_TIME_FORMAT),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'price',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName:\n\t\t\t\t\t\t'ee-ticket-list-col-hdr ee-ticket-list-col-price ee-rspnsv-table-column-tiny ee-number-column',\n\t\t\t\t\tvalue: formatAmount(ticket.price),\n\t\t\t\t},\n\t\t\t\tquantity,\n\t\t\t\t{\n\t\t\t\t\tkey: 'sold',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName:\n\t\t\t\t\t\t'ee-ticket-list-cell ee-ticket-list-col-sold ee-rspnsv-table-column-tiny ee-number-column',\n\t\t\t\t\tvalue: ticket.sold,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'registrations',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName:\n\t\t\t\t\t\t'ee-ticket-list-cell ee-ticket-list-col-registrations ee-rspnsv-table-column-smaller ee-centered-column',\n\t\t\t\t\tvalue: sortingEnabled ? '-' : <TicketRegistrationsLink ticket={ticket} />,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'actions',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName: 'ee-ticket-list-cell ee-actions-column ee-rspnsv-table-column-big',\n\t\t\t\t\tvalue: sortingEnabled ? '-' : <TicketActionsMenu entity={ticket} />,\n\t\t\t\t},\n\t\t\t];\n\n\t\t\tconst exclude = ['row', 'stripe', 'name', 'actions'];\n\n\t\t\tconst cells = pipe(\n\t\t\t\tfilter(filterCellByStartOrEndDate(displayStartOrEndDate)),\n\t\t\t\taddZebraStripesOnMobile(exclude)\n\t\t\t)(cellsData);\n\n\t\t\treturn {\n\t\t\t\tcells,\n\t\t\t\tclassName: `ee-editor-date-list-view-row ${statusClassName}`,\n\t\t\t\tid: `ee-editor-date-list-view-row-${ticket.id}`,\n\t\t\t\tkey: `row-${ticket.id}`,\n\t\t\t\ttype: 'row',\n\t\t\t};\n\t\t},\n\t\t[formatAmount]\n\t); // no deps\n};\n\nexport default useBodyRowGenerator;\n","import { __ } from '@wordpress/i18n';\nimport * as yup from 'yup';\n\nimport { yupToFinalFormErrors } from '@eventespresso/form';\nimport { BulkEditFormShape } from './types';\n\nexport const validate = async (values: BulkEditFormShape): Promise<any> => {\n\treturn await yupToFinalFormErrors(validationSchema, values);\n};\n\nconst validationSchema = yup.object({\n\tname: yup.string().min(3, () => __('Name must be at least three characters')),\n});\n","import { useMemo, useCallback } from 'react';\nimport { __ } from '@wordpress/i18n';\nimport { pick } from 'ramda';\n\nimport { CalendarOutlined, ControlOutlined, ProfileOutlined } from '@eventespresso/icons';\nimport { intervalsToOptions, Intervals, DATE_INTERVALS } from '@eventespresso/services';\nimport type { EspressoFormProps } from '@eventespresso/form';\n\nimport { validate } from './formValidation';\nimport type { BulkEditFormShape } from './types';\nimport { useMemoStringify } from '@eventespresso/hooks';\n\ntype DateFormConfig = EspressoFormProps<BulkEditFormShape>;\n\nconst unitOptions = intervalsToOptions(\n\tpick<Intervals, keyof Intervals>(['months', 'weeks', 'days', 'hours', 'minutes'], DATE_INTERVALS),\n\ttrue\n);\n\nconst useBulkEditFormConfig = (config?: EspressoFormProps<BulkEditFormShape>): DateFormConfig => {\n\tconst { onSubmit } = config;\n\n\tconst onSubmitFrom: DateFormConfig['onSubmit'] = useCallback(\n\t\t(values, form, ...restParams) => {\n\t\t\treturn onSubmit(values, form, ...restParams);\n\t\t},\n\t\t[onSubmit]\n\t);\n\n\tconst adjacentFormItemProps = useMemoStringify({\n\t\tclassName: 'ee-form-item-pair',\n\t});\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\t...config,\n\t\t\tonSubmit: onSubmitFrom,\n\t\t\tvalidate,\n\t\t\tlayout: 'horizontal',\n\t\t\tdebugFields: ['values', 'errors'],\n\t\t\tsections: [\n\t\t\t\t{\n\t\t\t\t\tname: 'basics',\n\t\t\t\t\ticon: ProfileOutlined,\n\t\t\t\t\ttitle: __('Basics'),\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\t\tlabel: __('Name'),\n\t\t\t\t\t\t\tfieldType: 'text',\n\t\t\t\t\t\t\tmin: 3,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'description',\n\t\t\t\t\t\t\tlabel: __('Description'),\n\t\t\t\t\t\t\tfieldType: 'textarea',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'dates',\n\t\t\t\t\ticon: CalendarOutlined,\n\t\t\t\t\ttitle: __('Dates'),\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'shiftDates',\n\t\t\t\t\t\t\tlabel: __('Shift dates'),\n\t\t\t\t\t\t\tfieldType: 'group',\n\t\t\t\t\t\t\tformControlProps: {\n\t\t\t\t\t\t\t\tclassName: 'shift-dates',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tsubFields: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'value',\n\t\t\t\t\t\t\t\t\tfieldType: 'number',\n\t\t\t\t\t\t\t\t\tmin: 1,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'unit',\n\t\t\t\t\t\t\t\t\tfieldType: 'select',\n\t\t\t\t\t\t\t\t\toptions: unitOptions,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'type',\n\t\t\t\t\t\t\t\t\tfieldType: 'select',\n\t\t\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: '',\n\t\t\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: __('earlier'),\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'earlier',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: __('later'),\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'later',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'details',\n\t\t\t\t\ticon: ControlOutlined,\n\t\t\t\t\ttitle: __('Details'),\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'quantity',\n\t\t\t\t\t\t\tlabel: __('Quantity For Sale'),\n\t\t\t\t\t\t\tfieldType: 'number',\n\t\t\t\t\t\t\tformControlProps: adjacentFormItemProps,\n\t\t\t\t\t\t\tparseAsInfinity: true,\n\t\t\t\t\t\t\tmin: -1,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'uses',\n\t\t\t\t\t\t\tlabel: __('Number of Uses'),\n\t\t\t\t\t\t\tfieldType: 'number',\n\t\t\t\t\t\t\tparseAsInfinity: true,\n\t\t\t\t\t\t\tformControlProps: adjacentFormItemProps,\n\t\t\t\t\t\t\tmin: 0,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'min',\n\t\t\t\t\t\t\tlabel: __('Minimum Quantity'),\n\t\t\t\t\t\t\tfieldType: 'number',\n\t\t\t\t\t\t\tformControlProps: adjacentFormItemProps,\n\t\t\t\t\t\t\tmin: 0,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'max',\n\t\t\t\t\t\t\tlabel: __('Maximum Quantity'),\n\t\t\t\t\t\t\tfieldType: 'number',\n\t\t\t\t\t\t\tparseAsInfinity: true,\n\t\t\t\t\t\t\tformControlProps: adjacentFormItemProps,\n\t\t\t\t\t\t\tmin: -1,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'isRequired',\n\t\t\t\t\t\t\tlabel: __('Required Ticket'),\n\t\t\t\t\t\t\tfieldType: 'switch',\n\t\t\t\t\t\t\tformControlProps: adjacentFormItemProps,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t],\n\t\t}),\n\t\t[adjacentFormItemProps, config, onSubmitFrom]\n\t);\n};\n\nexport default useBulkEditFormConfig;\n","import { useCallback } from 'react';\n\nimport { useBulkEdit } from '@eventespresso/services';\nimport { useTickets, useBulkEditTickets, formToBulkUpdateInput } from '@eventespresso/edtr-services';\n\nimport type { BulkEditFormShape } from './types';\n\ntype Callback = (values: BulkEditFormShape) => void;\n\nconst useSubmitForm = (onClose: VoidFunction): Callback => {\n\tconst { getSelected, unSelectAll } = useBulkEdit();\n\tconst allTickets = useTickets();\n\tconst { updateEntities } = useBulkEditTickets();\n\treturn useCallback<Callback>(\n\t\t(formData) => {\n\t\t\t// pull the shutter down\n\t\t\tonClose();\n\t\t\t// back to basics\n\t\t\tunSelectAll();\n\t\t\t// prepare mutation input from data\n\t\t\tconst input = formToBulkUpdateInput(formData, allTickets, getSelected());\n\t\t\t// do the thing\n\t\t\tupdateEntities(input);\n\t\t},\n\t\t[allTickets, getSelected, onClose, unSelectAll, updateEntities]\n\t);\n};\n\nexport default useSubmitForm;\n","import React from 'react';\nimport { __ } from '@wordpress/i18n';\n\nimport { BulkEditDetails } from '@eventespresso/components';\nimport useBulkEditFormConfig from './useBulkEditFormConfig';\nimport useSubmitForm from './useSubmitForm';\n\ntype EditDetailsProps = {\n\tisOpen: boolean;\n\tonClose: VoidFunction;\n};\n\nconst EditDetails: React.FC<EditDetailsProps> = ({ onClose, isOpen }) => {\n\tconst onSubmit = useSubmitForm(onClose);\n\tconst formConfig = useBulkEditFormConfig({ onSubmit });\n\n\treturn (\n\t\t<BulkEditDetails\n\t\t\tformConfig={formConfig}\n\t\t\tisOpen={isOpen}\n\t\t\tonClose={onClose}\n\t\t\ttitle={__('Bulk edit ticket details')}\n\t\t\twarning={__('any changes will be applied to ALL of the selected tickets.')}\n\t\t/>\n\t);\n};\n\nexport default EditDetails;\n","import React, { useState, useCallback } from 'react';\nimport { __ } from '@wordpress/i18n';\nimport { useDisclosure } from '@chakra-ui/hooks';\n\nimport { BulkActions, BulkActionsProps } from '@eventespresso/components';\n\nimport { EditDetails } from '../details';\nimport { useMemoStringify } from '@eventespresso/hooks';\n\nconst Actions: React.FC = () => {\n\tconst [action, setAction] = useState('');\n\n\tconst { isOpen, onOpen, onClose } = useDisclosure();\n\n\tconst options = useMemoStringify([\n\t\t{\n\t\t\tvalue: '',\n\t\t\tlabel: __('bulk actions'),\n\t\t},\n\t\t{\n\t\t\tvalue: 'edit-details',\n\t\t\tlabel: __('edit ticket details'),\n\t\t},\n\t\t{\n\t\t\tvalue: 'delete',\n\t\t\tlabel: __('delete tickets'),\n\t\t},\n\t]);\n\n\tconst onApply = useCallback<BulkActionsProps['onApply']>(\n\t\t(action) => {\n\t\t\tsetAction(action);\n\t\t\tonOpen();\n\t\t},\n\t\t[onOpen]\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<BulkActions options={options} onApply={onApply} defaultAction='' />\n\t\t\t{isOpen && <>{action === 'edit-details' && <EditDetails isOpen={true} onClose={onClose} />}</>}\n\t\t</>\n\t);\n};\n\nexport default Actions;\n","import React from 'react';\nimport { __ } from '@wordpress/i18n';\n\nimport { EntityTable } from '@eventespresso/components';\nimport useHeaderRowGenerator from './useHeaderRowGenerator';\nimport useBodyRowGenerator from './useBodyRowGenerator';\nimport { useTicketsListContext } from '@edtrServices/context/EntityListContext';\nimport { useReorderTickets } from '@eventespresso/edtr-services';\nimport { withBulkEdit } from '@eventespresso/services';\nimport { Actions } from '../bulkEdit';\n\n/**\n * Displays tickets in a standard list table like view\n */\nconst TableView: React.FC = () => {\n\tconst { filterState, filteredEntities } = useTicketsListContext();\n\n\tconst { sortResponder: sortTickets } = useReorderTickets(filteredEntities);\n\n\tconst bodyRowGenerator = useBodyRowGenerator();\n\tconst headerRowGenerator = useHeaderRowGenerator();\n\n\treturn (\n\t\t<>\n\t\t\t<Actions />\n\t\t\t<EntityTable\n\t\t\t\tentities={filteredEntities}\n\t\t\t\tfilterState={filterState}\n\t\t\t\tbodyRowGenerator={bodyRowGenerator}\n\t\t\t\theaderRowGenerator={headerRowGenerator}\n\t\t\t\tclassName={'ee-tickets-list-list-view ee-fade-in'}\n\t\t\t\ttableId='ticket-entities-table-view'\n\t\t\t\ttableCaption={__('Tickets')}\n\t\t\t\tonSort={sortTickets}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default withBulkEdit(TableView);\n"],"sourceRoot":""}